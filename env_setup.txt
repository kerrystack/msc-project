# 1. build cluster, takes approximate 10-15 minutes
cd "C:\D\msc_project\msc-project\provision-eks-cluster"
terraform plan
terraform apply

# 2. set kube config to cluster name
aws eks --region $(terraform output -raw region) update-kubeconfig --name $(terraform output -raw cluster_name)

# 3. Install prometheus with Grafana (ref here: https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack)
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm install prometheus-stack prometheus-community/kube-prometheus-stack

# 4. Port forward for grafana
kubectl port-forward deploy/prometheus-stack-grafana 8080:3000
kubectl port-forward svc/prometheus-stack-kube-prom-prometheus 9090

# 5. Login to Grafana
browse to http://localhost:8080
username: admin
password: prom-operator (see https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml)

6. Deplay a sample app
cd C:\D\msc_project\msc-project\sample-app
kubectl apply -f .\deployment.yaml
kubectl apply -f .\service.yaml
kubectl apply -f .\servicemonitor.yaml

7. Setup service monitor
https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/getting-started.md#deploying-a-sample-application

Sample Prometheus queries
sum(rate(container_cpu_usage_seconds_total{}[1h])) by (pod, namespace)
sum(rate(container_cpu_usage_seconds_total{container!=""}[5m])) by (namespace, pod)

https://prometheus.io/docs/guides/basic-auth/
curl -u admin http://localhost:9090/metrics

curl -g 'http://127.0.0.1:20001/api/v1/query?query=max_over_time(container_memory_usage_bytes{pod_name=~"somepod-.*"}[1d])' | jq

curl -u admin http://localhost:9090/api/v1/query?query=container_memory_usage_bytes

curl.exe -u admin 'http://localhost:9090/api/v1/query?query=container_memory_usage_bytes{pod_name=~"example-app*"}'






sum(rate(container_cpu_usage_seconds_total{container="example-app"}[5m])) by (namespace, pod)




